@{
    ViewBag.Title = "Home Page";


}

<div class="jumbotron jumbotron-original">

    <h1><center>Show Finder</center></h1>
    <div class="well well1">Interested in finding new music? Love seeing live shows? Search an artist you like for recommendations on similar bands performing near you. </div>
    <p></p>
</div>



<div class="row">
    <div class="col-sm-12">
        <div class="text-center">

            <p><br></p>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-sm-6">

        <form method="post" action="Home/Results">

            <label for="InputArtist">Artist</label>
            <input type="text" class="form-control" id="InputArtist" placeholder="Enter artist name..." name="artist">    <br />
    </div>
    <div class="col-sm-6">

        <div id="locationField">
            <label for="autocomplete">Address</label>
            <input id="autocomplete" class="form-control" placeholder="Enter your address..."
                   onFocus="geolocate()" type="text"></input>

        </div>
    </div>
</div>
<br />
<br />
<div id="address_form_table">
    <table class="table" id="address">
        <tr>
            <td class="label">Street address</td>
            <td class="slimField">
                <input class="field" id="street_number"
                       disabled="true"></input>
            </td>
            <td class="wideField" colspan="2">
                <input class="field" id="route"
                       disabled="true"></input>
            </td>
        </tr>
        <tr>
            <td class="label">City</td>
            <td class="wideField" colspan="3">
                <input class="text" name="city" id="locality"
                       disabled="true"></input>
            </td>
        </tr>
        <tr>
            <td class="label">State</td>
            <td class="slimField">
                <input class="text"
                       id="administrative_area_level_1" name="state" disabled="true"></input>
            </td>
            <td class="label">Zip code</td>
            <td class="wideField">
                <input class="field" id="postal_code"
                       disabled="true"></input>
            </td>
        </tr>
        <tr>
            <td class="label">Country</td>
            <td class="wideField" colspan="3">
                <input class="field"
                       id="country" disabled="true"></input>
            </td>
        </tr>
    </table>
</div>
<button type="submit" value="Submit" id="submit" class="btn btn-primary btn-block active">Submit</button>
  </form>


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA-MZhZuWjzvAzM3HdpjCJw0P1frncbm08&libraries=places&callback=initAutocomplete"
        async defer></script>

<script>
    // This example displays an address form, using the autocomplete feature
    // of the Google Places API to help users fill in the information.

    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:


    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            //** type {!HTMLInputElement} */
                (document.getElementById('autocomplete')),
            { types: ['geocode'] });

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>
